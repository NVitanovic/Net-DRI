.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::DRI::Logging 3pm"
.TH Net::DRI::Logging 3pm "2012-08-08" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DRI::Logging \- Logging Operations for Net::DRI
.SH "VERSION"
.IX Header "VERSION"
This documentation refers to Net::DRI::Logging version 1.02
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This module is never used directly, only its subclasses are used. See the subclasses
documentation: Net::DRI::Logging::Files, Net::DRI::Logging::Null and Net::DRI::Logging::Stderr.
See also Net::DRI documentation and its \f(CW\*(C`logging()\*(C'\fR method.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the superclass of all logging modules (under the Net::DRI::Logging::* namespace).
.SH "EXAMPLES"
.IX Header "EXAMPLES"
See Net::DRI documentation.
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
This is mostly a pure virtual superclass. All subclasses should have the following methods:
.IP "\fInew()\fR" 4
.IX Item "new()"
a ref hash is passed with some keys ; besides keys specifically related to the logging
class used, some keys are (or should be) understood by all clases.
.Sp
They are:
.RS 4
.IP "level" 4
.IX Item "level"
current level of logging (no messages below this level would be dumped), between:
debug info notice warning error critical alert emergency ; default: warning
.Sp
It can be changed anytime later by using the \fIlevel()\fR method
.IP "xml_indent" 4
.IX Item "xml_indent"
0 or 1 depending if you want your \s-1XML\s0 strings to be dumped as a long line (0) or indented for humans (1) ; default: 0
.IP "encoding" 4
.IX Item "encoding"
if needed, name of encoding to use to convert data stream ; default: \s-1UTF\-8\s0
.RE
.RS 4
.RE
.IP "\fIname()\fR" 4
.IX Item "name()"
returns the name as string of the logging modules
.IP "setup_channel(\s-1SOURCE\s0,TYPE,DATA)" 4
.IX Item "setup_channel(SOURCE,TYPE,DATA)"
prepare for a new channel of data comming from \s-1SOURCE\s0 (package name), of \s-1TYPE\s0 ;
\&\s-1DATA\s0 is a ref hash of additional parameter, such as filenames, etc.
.IP "output(\s-1LEVEL\s0,TYPE,DATA1,DATA2,...)" 4
.IX Item "output(LEVEL,TYPE,DATA1,DATA2,...)"
add data to channel type \s-1TYPE\s0 at level \s-1LEVEL\s0 ('debug', 'info', 'notice', etc.) ;
\&\s-1DATA\s0 is a ref hash with all data to log or a simple string (the message) ; the logging module should know what
to do with it and how to format it (which may depend on the \s-1TYPE\s0 attribute, which itself
is tied to the \s-1SOURCE\s0 attribute of \f(CW\*(C`setup_channel()\*(C'\fR).
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
None.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
See the \f(CW\*(C`new()\*(C'\fR method.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
This module has to be used inside the Net::DRI framework and needs the following components:
.IP "Net::DRI::BaseClass" 4
.IX Item "Net::DRI::BaseClass"
.PD 0
.IP "Net::DRI::Util" 4
.IX Item "Net::DRI::Util"
.IP "Net::DRI::Exception" 4
.IX Item "Net::DRI::Exception"
.PD
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
None.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
No known bugs. Please report problems to author (see below) or use \s-1CPAN\s0 \s-1RT\s0 system. Patches are welcome.
.PP
The interface could be later changed to suit Log::Log4Perl or other Perl standard logging modules, if needed.
.PP
Other subclasses should be created to cater for other logging destinations (such as a \s-1RDBMS\s0).
.PP
Net::DRI expects these logging modules to be non-blocking and returning immediately.
.PP
This logging framework is currently only used by Net::DRI::Transport::Socket, it should
get applied to other transports and other internal parts of Net::DRI.
.PP
When LocalStorage do appear inside Net::DRI, logging should probably use it (\s-1TODO\s0).
.SH "SUPPORT"
.IX Header "SUPPORT"
For now, support questions should be sent to:
.PP
<netdri@dotandco.com>
.PP
Please also see the \s-1SUPPORT\s0 file in the distribution.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<http://www.dotandco.com/services/software/Net\-DRI/>
.SH "AUTHOR"
.IX Header "AUTHOR"
Patrick Mevzek, <netdri@dotandco.com>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2009,2010 Patrick Mevzek <netdri@dotandco.com>. All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
See the \s-1LICENSE\s0 file that comes with this distribution for more details.
