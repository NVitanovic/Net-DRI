.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::DRI::Data::Contact 3pm"
.TH Net::DRI::Data::Contact 3pm "2014-10-06" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DRI::Data::Contact \- Handle contact data, modeled from EPP for Net::DRI
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This base class encapsulates all data for a contact as defined in \s-1EPP\s0 (\s-1RFC4933\s0).
It can (and should) be subclassed for TLDs needing to store other data for a contact.
All subclasses must have a \fIvalidate()\fR method that takes care of verifying contact data,
and an \fIid()\fR method returning an opaque value, unique per contact (in a given registry).
.PP
The following methods are both accessors and mutators :
as mutators, they can be called in chain, as they all return the object itself.
.PP
Postal information through \fIname()\fR \fIorg()\fR \fIstreet()\fR \fIcity()\fR \fIsp()\fR \fIpc()\fR \fIcc()\fR can be provided twice.
\&\s-1EPP\s0 allows a localized form (content is in unrestricted \s-1UTF\-8\s0) and internationalized form
(content \s-1MUST\s0 be represented in a subset of \s-1UTF\-8\s0 that can be represented 
in the 7\-bit US-ASCII character set). Not all registries support both forms.
.PP
When setting values, you pass one element if both forms are equal or two elements
as a list (first the localized form, then the internationalized one).
When getting values, in list context you get back both values, in scalar context you get
back the first one, that is the localized form.
.PP
You can also use methods \fIint2loc()\fR and \fIloc2int()\fR to create one version from the other.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fIloid()\fP"
.IX Subsection "loid()"
local object \s-1ID\s0 for this contact, never sent to registry (can be used to track the local db id of this object)
.SS "\fIsrid()\fP"
.IX Subsection "srid()"
server \s-1ID\s0, \s-1ID\s0 of the object as known by the registry in which it was created
.SS "\fIid()\fP"
.IX Subsection "id()"
an alias (needed for Net::DRI::Data::ContactSet) of the previous method
.SS "\fIroid()\fP"
.IX Subsection "roid()"
registry/remote object id (internal to a registry)
.SS "\fIname()\fP"
.IX Subsection "name()"
name of the contact
.SS "\fIorg()\fP"
.IX Subsection "org()"
organization of the contact
.SS "\fIstreet()\fP"
.IX Subsection "street()"
street address of the contact (ref array of up to 3 elements)
.SS "\fIcity()\fP"
.IX Subsection "city()"
city of the contact
.SS "\fIsp()\fP"
.IX Subsection "sp()"
state/province of the contact
.SS "\fIpc()\fP"
.IX Subsection "pc()"
postal code of the contact
.SS "\fIcc()\fP"
.IX Subsection "cc()"
alpha2 country code of the contact (will be verified against list of valid country codes)
.SS "\fIemail()\fP"
.IX Subsection "email()"
email address of the contact
.SS "\fIvoice()\fP"
.IX Subsection "voice()"
voice number of the contact (in the form +CC.NNNNNNNNxEEE)
.SS "\fIfax()\fP"
.IX Subsection "fax()"
fax number of the contact (same form as above)
.SS "\fIauth()\fP"
.IX Subsection "auth()"
authentication for this contact (hash ref with a key 'pw' and a value being the password)
.SS "\fIdisclose()\fP"
.IX Subsection "disclose()"
privacy settings related to this contact (see \s-1RFC\s0)
.SS "\fIint2loc()\fP"
.IX Subsection "int2loc()"
create the localized part from the internationalized part ; existing internationalized data is overwritten
.SS "\fIloc2int()\fP"
.IX Subsection "loc2int()"
create the internationalized part from the localized part ; existing localized data is overwritten ;
as the internationalized part must be a subset of \s-1UTF\-8\s0 when the localized one can be the full \s-1UTF\-8\s0,
this operation may creates undefined characters (?) as result
.SS "\fIas_string()\fP"
.IX Subsection "as_string()"
return a string formed with all data contained in this contact object ; this is mostly useful for debugging and logging, this
string should not be parsed as its format is not guaranteed to remain stable, you should use the above accessors
.SS "\fIattributes()\fP"
.IX Subsection "attributes()"
return an array of attributes name available in this contact object (taking into account any subclass specific attribute)
.SH "SUPPORT"
.IX Header "SUPPORT"
For now, support questions should be sent to:
.PP
<netdri@dotandco.com>
.PP
Please also see the \s-1SUPPORT\s0 file in the distribution.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
http://www.dotandco.com/services/software/Net\-DRI/
.SH "AUTHOR"
.IX Header "AUTHOR"
Patrick Mevzek, <netdri@dotandco.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2005\-2010 Patrick Mevzek <netdri@dotandco.com>.
All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
See the \s-1LICENSE\s0 file that comes with this distribution for more details.
