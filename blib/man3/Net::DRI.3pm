.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::DRI 3pm"
.TH Net::DRI 3pm "2013-01-14" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DRI \- Interface to Domain Name Registries/Registrars/Resellers
.SH "VERSION"
.IX Header "VERSION"
This documentation refers to Net::DRI version 0.95
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        use Net::DRI;
\&        my $dri=Net::DRI\->new({ cache_ttl => 10, trid_factory => ..., logging => .... });
\&
\&        ... various operations ...
\&
\&        $dri\->end();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Net::DRI is a Perl library to access services offered by domain name
providers, such as registries or registrars. \s-1DRI\s0 stands for
Domain Registration Interface and it aims to be
for domain name registries/registrars/resellers what \s-1DBI\s0 is for databases:
an abstraction over multiple providers, with multiple policies, transports
and protocols all used through a uniform \s-1API\s0.
.PP
It is an object-oriented framework implementing \s-1RRP\s0 (\s-1RFC\s0 2832/3632),
\&\s-1EPP\s0 (core \s-1EPP\s0 in \s-1RFC\s0 5730/5731/5732/5733/5734 aka \s-1STD69\s0, extensions in
\&\s-1RFC\s0 3915/4114/4310/5076 and various extensions of ccTLDs/gTLDs
\&\- currently more than 30 TLDs are directly supported with extensions),
\&\s-1RRI\s0 (.DE registration protocol), Whois, \s-1DAS\s0 (Domain Availability Service used by .BE, .EU, .AU, .NL),
\&\s-1IRIS\s0 (\s-1RFC3981\s0) \s-1DCHK\s0 (\s-1RFC5144\s0) over \s-1LWZ\s0 (\s-1RFC4993\s0) for .DE currently and \s-1XCP\s0 (\s-1RFC4992\s0),
\&.FR/.RE email and webservices interface, and resellers interface of some registrars
(Gandi, OpenSRS, etc.).
It has transports for connecting with \s-1UDP/TCP/TLS\s0, \s-1HTTP/HTTPS\s0, 
Web Services (XML-RPC and \s-1SOAP\s0 with/without \s-1WSDL\s0),
or SMTP-based registries/registrars.
.PP
It is not limited to handling of domain names, it can be easily extended.
For example, it supports \s-1ENUM\s0 registrations and validations, or \s-1DNSSEC\s0 provisioning.
.PP
A shell is included for easy prototyping and debugging, see Net::DRI::Shell.
Caching and logging features are also included by default.
.PP
Please see the included \s-1README\s0 file for full details.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Please see the \f(CW\*(C`eg/\*(C'\fR subdirectory of the distribution, it contains various
examples. Please also see all unit tests under \f(CW\*(C`t/\*(C'\fR, they show all parts of the \s-1API\s0.
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
After having used Net::DRI (which is the only module you should need to \f(CW\*(C`use\*(C'\fR from
this distribution), you create an object as instance of this class,
and every operation will be carried through it.
.SS "\fItrid_factory()\fP"
.IX Subsection "trid_factory()"
This is an accessor to the trid factory (code reference) used to generate client
transaction identificators, that are useful for logging and asynchronous operations.
.PP
During the \f(CW\*(C`new()\*(C'\fR call, a \f(CW\*(C`trid_factory()\*(C'\fR is initialized to a default safe value
(being Net::DRI::Util::create_trid_1).
.PP
You need to call this method only if you wish to use another function to generate transaction identificators.
.PP
All other objects (registry profiles and transports) 
created after that will inherit this value. If you call again \f(CW\*(C`trid_factory()\*(C'\fR
the change will only apply to new objects (registry profiles and transports) created after the change,
it will not apply to already existing objects (registry profiles and transports).
.SS "\fIlogging()\fP"
.IX Subsection "logging()"
This is an accessor to the underlying Logging object. During the \f(CW\*(C`new()\*(C'\fR call you can
provide the object, or just a string (\*(L"null\*(R", \*(L"stderr\*(R", \*(L"files\*(R" or \*(L"syslog\*(R" which are the
current logging modules available in Net::DRI), or a reference to an array
with the first parameter a string (same as previously) and the second parameter a reference to
an hash with data needed by the logging class used (see for example Net::DRI::Logging::Files).
.PP
If you want to log the application data (what is exchanged with remote server, such as \s-1EPP\s0 \s-1XML\s0 streams),
you need to use logging level of 'notice', or higher.
.SS "\fIcache()\fP"
.IX Subsection "cache()"
This is an accessor to the underlying Cache object. See Net::DRI::Cache.
This object has a \f(CW\*(C`ttl()\*(C'\fR method to access and change the current time to live
for cached data.
.SH "SUPPORT"
.IX Header "SUPPORT"
For now, support questions should be sent to:
.PP
<netdri@dotandco.com>
.PP
Please also see the \s-1SUPPORT\s0 file in the distribution.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<http://www.dotandco.com/services/software/Net\-DRI/>
.SH "AUTHOR"
.IX Header "AUTHOR"
Patrick Mevzek, <netdri@dotandco.com>
and various contributors (see Changes file and web page above)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2005\-2010 Patrick Mevzek <netdri@dotandco.com>.
All rights reserved.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
See the \s-1LICENSE\s0 file that comes with this distribution for more details.
